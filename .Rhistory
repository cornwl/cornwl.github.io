simulate_and_estimate <- function(n) {
x <- runif(n)
y <- true_beta * x + rnorm(n)
coef(lm(y ~ x))[2]
}
# Simulate and estimate
n_values <- seq(10, max_n, by=50)
estimated_betas <- sapply(n_values, simulate_and_estimate)
# Plot
c <- ggplot(
data.frame(n_values, estimated_betas),
aes(x=n_values, y=estimated_betas)
) +
geom_line() +
geom_hline(
yintercept = true_beta,
linetype="dashed",
color="red"
) +
labs(
title="Consistency of OLS under random sampling",
x="Sample size",
y="Estimated beta"
)
c
set.seed(1234567)
# Set up
true_beta <- 2
n_rep <- 1000
max_n <- 10000
# Function to simulate data and estimate model
simulate_and_estimate <- function(n) {
x <- runif(n)
y <- true_beta * x + rnorm(n)
coef(lm(y ~ x))[2]
}
# Simulate and estimate
n_values <- seq(10, max_n, by=50)
estimated_betas <- sapply(n_values, simulate_and_estimate)
# Plot
c <- ggplot(
data.frame(n_values, estimated_betas),
aes(x=n_values, y=estimated_betas)
) +
geom_line() +
geom_hline(
yintercept = true_beta,
linetype="dashed",
color="red"
) +
labs(
title="Consistency of OLS under random sampling",
x="Sample size",
y="Estimated beta"
)
c
set.seed(1234567)
# Set up
true_beta <- 2
n_rep <- 1
max_n <- 10000
# Function to simulate data and estimate model
simulate_and_estimate <- function(n) {
x <- runif(n)
y <- true_beta * x + rnorm(n)
coef(lm(y ~ x))[2]
}
# Simulate and estimate
n_values <- seq(50, max_n, by=50)
estimated_betas <- sapply(n_values, simulate_and_estimate)
# Plot
c <- ggplot(
data.frame(n_values, estimated_betas),
aes(x=n_values, y=estimated_betas)
) +
geom_line() +
geom_hline(
yintercept = true_beta,
linetype="dashed",
color="red"
) +
labs(
title="Consistency of OLS under random sampling",
x="Sample size",
y="Estimated beta"
)
c
set.seed(1234567)
# Set up
true_beta <- 2
#n_rep <- 1
max_n <- 10000
# Function to simulate data and estimate model
simulate_and_estimate <- function(n) {
x <- runif(n)
y <- true_beta * x + rnorm(n)
coef(lm(y ~ x))[2]
}
# Simulate and estimate
n_values <- seq(50, max_n, by=50)
estimated_betas <- sapply(n_values, simulate_and_estimate)
# Plot
c <- ggplot(
data.frame(n_values, estimated_betas),
aes(x=n_values, y=estimated_betas)
) +
geom_line() +
geom_hline(
yintercept = true_beta,
linetype="dashed",
color="red"
) +
labs(
title="Consistency of OLS under random sampling",
x="Sample size",
y="Estimated beta"
)
c
n_trials <- 1000
sample_sizes <- c(10, 30, 50, 100, 300, 500, 1000)
true_beta <- 2
results <- data.frame(sample_size = integer(), beta_hat = numeric())
for (n in sample_sizes) {
for (i in 1:n_trials) {
x <- runif(n)
y <- true_beta * x + rnorm(n)
beta_hat <- coef(lm(y ~ x))[2]
results <- rbind(results, data.frame(sample_size = n, beta_hat = beta_hat))
}
}
ggplot(results, aes(x = sample_size, y = beta_hat)) +
geom_point(alpha = 0.2) +
geom_hline(yintercept = true_beta, color = "red", size = 1) +
ggtitle("Figure 6. Consistency of OLS under random sampling") +
labs(
title="Consistency of OLS under random sampling",
x="Sample size",
y="Estimated beta"
)
n_trials <- 1000
sample_sizes <- c(10, 30, 50, 100, 300, 500, 1000)
true_beta <- 2
results <- data.frame(sample_size = integer(), beta_hat = numeric())
for (n in sample_sizes) {
for (i in 1:n_trials) {
x <- runif(n)
y <- true_beta * x + rnorm(n)
beta_hat <- coef(lm(y ~ x))[2]
results <- rbind(results, data.frame(sample_size = n, beta_hat = beta_hat))
}
}
c <- ggplot(results, aes(x = sample_size, y = beta_hat)) +
geom_point(alpha = 0.2) +
geom_hline(yintercept = true_beta, color = "red", linewidth = .75) +
labs(
title="Figure 6. Consistency of OLS under random sampling",
x="Sample size",
y="Estimated beta"
)
c
install.packages("ggpmisc")
install.packages("felm")
install.packages("lfe")
###############################################################################
# Attach packages
library(tidyverse)     # To use the tidy packages
library(ggplot2)       # For plotting and visualizing
library(wooldridge)    # To access the Card data
library(modelsummary)  # To make pretty tables
library(stargazer)     # An older way to make pretty tables
library(gridExtra)     # To arrange figures in a grid
library(ggpmisc)       # For model fit annotations in ggplot
library(lfe)
###############################################################################
# Code chunk global options
knitr::opts_chunk$set(
echo = FALSE,
eval=TRUE,
message = FALSE
)
# Turn off scientific notation
options(scipen=999)
# Turn off warning messages
options(warn = - 1)
# Suppress `dplyr` warnings
options(dplyr.summarise.inform = FALSE)
n_trials <- 1000
sample_sizes <- c(10, 100, 1000)
true_beta <- 2
results <- data.frame(sample_size = integer(), beta_hat = numeric())
for (n in sample_sizes) {
for (i in 1:n_trials) {
x <- runif(n)
y <- true_beta * x + rnorm(n)
beta_hat <- coef(lm(y ~ x))[2]
rootn_se <- sqrt(n)*(beta_hat-true_beta)
results <- rbind(results, data.frame(sample_size = n, rootn_se = rootn_se))
}
}
an <- ggplot(results, aes(x = rootn_se), color=sample_sizes) +
geom_density(size = .75) +
geom_vline(
aes(xintercept = 0),
color = "black",
linetype = "dashed",
size = .75) +
labs(
title="Figure 7. Asymptotic normality of OLS",
x="Root-N x Sampling Error",
y="Density"
)
an
n_trials <- 1000
sample_sizes <- c(10, 100, 1000)
true_beta <- 2
results <- data.frame(sample_size = integer(), beta_hat = numeric())
for (n in sample_sizes) {
for (i in 1:n_trials) {
x <- runif(n)
y <- true_beta * x + rnorm(n)
beta_hat <- coef(lm(y ~ x))[2]
rootn_se <- sqrt(n)*(beta_hat-true_beta)
results <- rbind(results, data.frame(sample_size = n, rootn_se = rootn_se))
}
}
an <- ggplot(results, aes(x = rootn_se, color=sample_sizes)) +
geom_density(size = .75) +
geom_vline(
aes(xintercept = 0),
color = "black",
linetype = "dashed",
size = .75) +
labs(
title="Figure 7. Asymptotic normality of OLS",
x="Root-N x Sampling Error",
y="Density"
)
an
n_trials <- 1000
sample_sizes <- c(10, 100, 1000)
true_beta <- 2
results <- data.frame(sample_size = integer(), beta_hat = numeric())
for (n in sample_sizes) {
for (i in 1:n_trials) {
x <- runif(n)
y <- true_beta * x + rnorm(n)
beta_hat <- coef(lm(y ~ x))[2]
rootn_se <- sqrt(n)*(beta_hat-true_beta)
results <- rbind(results, data.frame(sample_size = n, rootn_se = rootn_se))
}
}
an <- ggplot(results, aes(x = rootn_se, color=sample_sizes)) +
geom_density() +
geom_vline(
aes(xintercept = 0),
color = "black",
linetype = "dashed",
size = .75) +
labs(
title="Figure 7. Asymptotic normality of OLS",
x="Root-N x Sampling Error",
y="Density"
)
an
n_trials <- 1000
sample_sizes <- c(10, 100, 1000)
true_beta <- 2
results <- data.frame(sample_size = integer(), beta_hat = numeric())
for (n in sample_sizes) {
for (i in 1:n_trials) {
x <- runif(n)
y <- true_beta * x + rnorm(n)
beta_hat <- coef(lm(y ~ x))[2]
rootn_se <- sqrt(n)*(beta_hat-true_beta)
results <- rbind(results, data.frame(sample_size = n, rootn_se = rootn_se))
}
}
an <- ggplot(results, aes(x = rootn_se, color=sample_size)) +
geom_density(size = .75) +
geom_vline(
aes(xintercept = 0),
color = "black",
linetype = "dashed",
size = .75) +
labs(
title="Figure 7. Asymptotic normality of OLS",
x="Root-N x Sampling Error",
y="Density"
)
an
n_trials <- 1000
sample_sizes <- c(10, 100, 1000)
true_beta <- 2
results_df <- data.frame(rootn_se = numeric(), sample_size = factor())
for (n in sample_sizes) {
rootn_se <- numeric(n_trials)
for (i in 1:n_trials) {
x <- runif(n)
y <- true_beta * x + rnorm(n)
beta_hat <- coef(lm(y ~ x))[2]
rootn_se[i] <- sqrt(n)*(beta_hat-true_beta)
}
tmp_df <- data.frame(rootn_se = rootn_se, sample_size = factor(rep(n, n_trials)))
results_df <- rbind(results_df, temp_df)
}
n_trials <- 1000
sample_sizes <- c(10, 100, 1000)
true_beta <- 2
results_df <- data.frame(rootn_se = numeric(), sample_size = factor())
for (n in sample_sizes) {
rootn_se <- numeric(n_trials)
for (i in 1:n_trials) {
x <- runif(n)
y <- true_beta * x + rnorm(n)
beta_hat <- coef(lm(y ~ x))[2]
rootn_se[i] <- sqrt(n)*(beta_hat-true_beta)
}
tmp_df <- data.frame(rootn_se = rootn_se, sample_size = factor(rep(n, n_trials)))
results_df <- rbind(results_df, tmp_df)
}
an <- ggplot(results, aes(x = rootn_se, color=sample_size)) +
geom_density(size = .75) +
geom_vline(
aes(xintercept = 0),
color = "black",
linetype = "dashed",
size = .75) +
labs(
title="Figure 7. Asymptotic normality of OLS",
x="Root-N x Sampling Error",
y="Density"
)
an
n_trials <- 1000
sample_sizes <- c(10, 100, 1000)
true_beta <- 2
results_df <- data.frame(rootn_se = numeric(), sample_size = factor())
for (n in sample_sizes) {
beta_hat <- numeric(n_trials)
rootn_se <- numeric(n_trials)
for (i in 1:n_trials) {
x <- runif(n)
y <- true_beta * x + rnorm(n)
beta_hat[i] <- coef(lm(y ~ x))[2]
rootn_se[i] <- sqrt(n)*(beta_hat[i]-true_beta)
}
tmp_df <- data.frame(rootn_se = rootn_se, sample_size = factor(rep(n, n_trials)))
results_df <- rbind(results_df, tmp_df)
}
an <- ggplot(results, aes(x = rootn_se, color=sample_size)) +
geom_density(size = .75) +
geom_vline(
aes(xintercept = 0),
color = "black",
linetype = "dashed",
size = .75) +
labs(
title="Figure 7. Asymptotic normality of OLS",
x="Root-N x Sampling Error",
y="Density"
)
an
n_trials <- 1000
sample_sizes <- c(10, 100, 1000)
true_beta <- 2
results_df <- data.frame(rootn_se = numeric(), sample_size = factor())
for (n in sample_sizes) {
beta_hat <- numeric(n_trials)
rootn_se <- numeric(n_trials)
for (i in 1:n_trials) {
x <- runif(n)
y <- true_beta * x + rnorm(n)
beta_hat[i] <- coef(lm(y ~ x))[2]
rootn_se[i] <- sqrt(n)*(beta_hat[i]-true_beta)
}
tmp_df <- data.frame(rootn_se = rootn_se, sample_size = factor(rep(n, n_trials)))
results_df <- rbind(results_df, tmp_df)
}
an <- ggplot(results_df, aes(x = rootn_se, color=sample_size)) +
geom_density(size = .75) +
geom_vline(
aes(xintercept = 0),
color = "black",
linetype = "dashed",
size = .75) +
labs(
title="Figure 7. Asymptotic normality of OLS",
x="Root-N x Sampling Error",
y="Density"
)
an
n_trials <- 1000
sample_sizes <- c(10, 100, 1000)
true_beta <- 2
results_df <- data.frame(rootn_se = numeric(), sample_size = factor())
for (n in sample_sizes) {
beta_hat <- numeric(n_trials)
rootn_se <- numeric(n_trials)
for (i in 1:n_trials) {
x <- rnorm(n)
y <- true_beta * x + runif(n)
beta_hat[i] <- coef(lm(y ~ x))[2]
rootn_se[i] <- sqrt(n)*(beta_hat[i]-true_beta)
}
tmp_df <- data.frame(rootn_se = rootn_se, sample_size = factor(rep(n, n_trials)))
results_df <- rbind(results_df, tmp_df)
}
an <- ggplot(results_df, aes(x = rootn_se, color=sample_size)) +
geom_density(size = .75) +
geom_vline(
aes(xintercept = 0),
color = "black",
linetype = "dashed",
size = .75) +
labs(
title="Figure 7. Asymptotic normality of OLS",
x="Root-N x Sampling Error",
y="Density"
)
an
n_trials <- 1000
sample_sizes <- c(10, 100, 1000)
true_beta <- 2
results_df <- data.frame(rootn_se = numeric(), sample_size = factor())
for (n in sample_sizes) {
beta_hat <- numeric(n_trials)
rootn_se <- numeric(n_trials)
for (i in 1:n_trials) {
x <- rnorm(n)
y <- true_beta * x + runif(n)
#    beta_hat[i] <- coef(lm(y ~ x))[2]
beta_hat <- coef(lm(y ~ x))[2]
rootn_se[i] <- sqrt(n)*(beta_hat-true_beta)
}
tmp_df <- data.frame(rootn_se = rootn_se, sample_size = factor(rep(n, n_trials)))
results_df <- rbind(results_df, tmp_df)
}
an <- ggplot(results_df, aes(x = rootn_se, color=sample_size)) +
geom_density(size = .75) +
geom_vline(
aes(xintercept = 0),
color = "black",
linetype = "dashed",
size = .75) +
labs(
title="Figure 7. Asymptotic normality of OLS",
x="Root-N x Sampling Error",
y="Density"
)
an
set.seed(12345)
n_trials <- 1000
sample_sizes <- c(10, 100, 1000)
true_beta <- 2
results_df <- data.frame(rootn_se = numeric(), sample_size = factor())
for (n in sample_sizes) {
beta_hat <- numeric(n_trials)
rootn_se <- numeric(n_trials)
for (i in 1:n_trials) {
x <- rnorm(n)
y <- true_beta * x + runif(n)
#    beta_hat[i] <- coef(lm(y ~ x))[2]
beta_hat <- coef(lm(y ~ x))[2]
rootn_se[i] <- sqrt(n)*(beta_hat-true_beta)
}
tmp_df <- data.frame(rootn_se = rootn_se, sample_size = factor(rep(n, n_trials)))
results_df <- rbind(results_df, tmp_df)
}
an <- ggplot(results_df, aes(x = rootn_se, color=sample_size)) +
geom_density(size = .75) +
geom_vline(
aes(xintercept = 0),
color = "black",
linetype = "dashed",
size = .75) +
labs(
title="Figure 7. Asymptotic normality of OLS",
x="Root-N x Sampling Error",
y="Density"
)
an
set.seed(12345)
n_trials <- 1000
sample_sizes <- c(10, 100, 1000)
true_beta <- 2
results_df <- data.frame(rootn_se = numeric(), sample_size = factor())
for (n in sample_sizes) {
beta_hat <- numeric(n_trials)
rootn_se <- numeric(n_trials)
for (i in 1:n_trials) {
x <- rnorm(n)
y <- true_beta * x + runif(n)
beta_hat[i] <- coef(lm(y ~ x))[2]
#    beta_hat <- coef(lm(y ~ x))[2]
rootn_se[i] <- sqrt(n)*(beta_hat[i]-true_beta)
}
tmp_df <- data.frame(rootn_se = rootn_se, sample_size = factor(rep(n, n_trials)))
results_df <- rbind(results_df, tmp_df)
}
an <- ggplot(results_df, aes(x = rootn_se, color=sample_size)) +
geom_density(size = .75) +
geom_vline(
aes(xintercept = 0),
color = "black",
linetype = "dashed",
size = .75) +
labs(
title="Figure 7. Asymptotic normality of OLS",
x="Root-N x Sampling Error",
y="Density"
)
an
